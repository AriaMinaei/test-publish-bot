name: Publish Insider Build

on:
  # only run when a comment is created under a pr
  issue_comment:
    types: [created]

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  publish:
    if: ${{ github.event.issue.pull_request && contains(github.event.comment.body, '/Publish insiders build') }}
    runs-on: ubuntu-latest

    permissions:
      issues: write
      # allow writing comments on the PR
      contents: write
      pull-requests: write

    steps:
      # check if the user is an owner of the repo
      - name: Has write access
        id: has-write-access
        uses: actions/github-script@v6
        with:
          script: |
            const res = await github.rest.repos.getCollaboratorPermissionLevel({
              ...context.repo,
              username: context.payload.comment.user.login,
            });

            console.log(res.data.permission)

            const hasPermission = ['admin', 'write', 'maintain'].includes(res.data.permission)

            if (!hasPermission) {
              await github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: `Cannot publish because user @${context.payload.comment.user.login} doesn't have write access.`
              })
            }

            return hasPermission

      # stop the workflow if the user doesn't have write access
      - name: Stop if user doesn't have write access
        if: ${{ !steps.has-write-access.outputs.result }}
        run: |
          echo "User doesn't have write access. Stopping the workflow."
          exit 1

      - name: Start the comment
        id: start-comment
        uses: actions/github-script@v6
        with:
          result-encoding: string
          script: |
            const result = await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `
              Publishing an insiders build. Will update this comment when done.
              <details><summary>see more</summary>

              Follow the workflow run [here](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})

              </details>
              `
            })

            const commentId = result.data.id

            return commentId

      - name: Get the pull request's ref
        id: pr-ref
        uses: actions/github-script@v6
        with:
          result-encoding: string
          script: |
            const {data: pullRequest} = await github.rest.pulls.get({
              ...context.repo,
              pull_number: context.issue.number
            })

            return pullRequest.head.sha

      - name: print the ref
        run: |
          echo "${{ steps.pr-ref.outputs.result }}"

      # checkout the repo at the latest commit of the PR
      - uses: actions/checkout@v2
        with:
          ref: ${{ steps.pr-ref.outputs.result }}

      - name: Update the comment
        id: update-comment
        uses: actions/github-script@v6
        with:
          script: |
            const result = await github.rest.issues.updateComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              comment_id: "${{ steps.start-comment.outputs.result }}",
              body: `
              Published at commit ${{ steps.pr-ref.outputs.result }}.
              <details><summary>see more</summary>

              Workflow log [here](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}).

              </details>
              `
            })
